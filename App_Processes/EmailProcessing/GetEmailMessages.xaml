<Activity mc:Ignorable="sap sap2010" x:Class="GetOutlookMailMessages" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_IncomingMessages" Type="OutArgument(scg:List(snm:MailMessage))" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>679,3824</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="20">
      <x:String>System.Activities</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="21">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Retrieves messages from default Outlook email account using various input parameters stored in Config file. Workflow retrieves top number of messages specified by the value stored in 'Top' integer variable. Retrieved emails are filtered by [Subject]='Collection System Report1'.  There is also a filter to exclude email received before 6/22/2020. Process will then reverse the order of the returned collection, 'IncomingMessages', to ensure theat older messages are processed first. In addition, only a subset number of emails retrieved will be processed, specified in 'EmailProcessCount'.&#xA;&#xA;Pre Condition: None&#xA;Post Condition: None" DisplayName="Get Email Messages" sap:VirtualizedContainerService.HintSize="659,3724" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="TimeoutMS" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Number of messages to retrieve counting from top (latest) of list" Name="Top" />
      <Variable x:TypeArguments="x:String" Name="SharedMailFolder" />
      <Variable x:TypeArguments="x:String" Name="SharedAccount" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="IncomingMessages" />
      <Variable x:TypeArguments="x:Int32" Name="EmailProcessCount" />
      <Variable x:TypeArguments="x:String" Name="ItemsFound" />
      <Variable x:TypeArguments="x:Int32" Name="AttemptIndex" />
      <Variable x:TypeArguments="s:DateTime" Name="CurrDT" />
      <Variable x:TypeArguments="x:String" Name="Occurrence" />
      <Variable x:TypeArguments="x:String" Name="OverallMesgFilter" />
      <Variable x:TypeArguments="x:String" Name="SubjFilter" />
      <Variable x:TypeArguments="x:String" Name="DTFilter" />
      <Variable x:TypeArguments="x:String" Name="DTFilterAM" />
      <Variable x:TypeArguments="x:String" Name="DTFilterPM" />
      <Variable x:TypeArguments="x:Int32" Name="MaxGetMsgsRetries" />
      <Variable x:TypeArguments="x:TimeSpan" Name="RetryInterval" />
      <Variable x:TypeArguments="x:String" Name="AuthorizedSender" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign sap2010:Annotation.AnnotationText="- AttemptIndex&#xA;- SharedAccount&#xA;- SharedMailFolder&#xA;- TimeoutMS&#xA;- Top - # of messages to read from top of email list&#xA;- CurrDT - Current DateTime&#xA;- Occurrence - &quot;AM&quot;, &quot;PM&quot;&#xA;- DTFilterAM, DTFilterPM, DTFilter - DateTime filter &#xA;- SubjFilter - Subject filter&#xA;- OverallMesgFilter - Combined filter text&#xA;- AuthorizedSender&#xA;- MaxGetMsgsRetries&#xA;- RetryInterval (TimeSpan)" DisplayName="Multiple Assign - Initializations" sap:VirtualizedContainerService.HintSize="617,739" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[AttemptIndex]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[SharedAccount]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("EmailSharedAccount").ToString()]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[SharedMailFolder]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("EmailSharedFolder").ToString()]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[TimeoutMS]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">[Integer.Parse(in_Config("EmailTimeoutMS").ToString())]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[Top]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">[Integer.Parse(in_Config("EmailTopParam").ToString())]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:DateTime">[CurrDT]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[Occurrence]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[If(Integer.Parse(CurrDT.ToString("HH")) &lt; 12, "AM", "PM")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[DTFilterAM]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">["[ReceivedTime] &gt;= '" + DateTime.Today.ToShortDateString() + " 00:00 AM' And [ReceivedTime] &lt; '" + DateTime.Today.ToShortDateString() + " 12:00 PM'"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[DTFilterPM]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">["[ReceivedTime] &gt;= '" + DateTime.Today.ToShortDateString() + " 12:00 PM' And [ReceivedTime] &lt;= '" + DateTime.Today.ToShortDateString() + " 11:59 PM'"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[DTFilter]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[If(Occurrence = "AM", DTFilterAM, DTFilterPM)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[SubjFilter]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[Subject]='Collection System Report1'</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[OverallMesgFilter]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">["(" + DTFilter + ") And (" +SubjFilter + ")"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[AuthorizedSender]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">COLLECTION_SYSTEM@SCE.COM</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[MaxGetMsgsRetries]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">20</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:TimeSpan">[RetryInterval]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:TimeSpan">00:01:00</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:RetryScope DisplayName="Retry Scope - Retry getting messages if no messages retrieved" sap:VirtualizedContainerService.HintSize="617,1023" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[MaxGetMsgsRetries]" RetryInterval="[RetryInterval]">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence DisplayName="Action - Retry activities" sap:VirtualizedContainerService.HintSize="376,805" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign - AttemptIndex (times attempted)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[AttemptIndex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[AttemptIndex + 1]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message - Retrieving email messages" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[DateTime.Now().ToString() + &quot; - Retrieving email messages (attempt #&quot; + AttemptIndex.ToString() + &quot;)&quot;]" />
            <Assign DisplayName="Assign - ItemsFound" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ItemsFound]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message - Message params" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Account: &quot;  + SharedAccount + vbCrLf + &#xA;&quot;Mail Folder: &quot; + SharedMailFolder + vbCrLf + &#xA;&quot;Filter: &quot; + OverallMesgFilter + vbCrLf + &#xA;&quot;Top: &quot; + Top.ToString()]" />
            <ui:GetOutlookMailMessages Account="[SharedAccount]" sap2010:Annotation.AnnotationText="Retrieve email messages from default Outlook account. Only get messages that have 'Collection System Report1' in Subject line." DisplayName="Get Outlook Mail Messages - Messages list" Filter="[OverallMesgFilter]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="334,109" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="[SharedMailFolder]" MarkAsRead="False" Messages="[IncomingMessages]" OnlyUnreadMessages="False" TimeoutMS="[TimeoutMS]" Top="[Top]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:GetOutlookMailMessages>
            <Assign sap2010:Annotation.AnnotationText="Set to &quot;True&quot; if messages were found, else &quot;False&quot;." DisplayName="Assign - ItemsFound" sap:VirtualizedContainerService.HintSize="334,102" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ItemsFound]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[If(IncomingMessages.Count &gt; 0, "True", "False")]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean">
          <ui:IsMatch DisplayName="Is Match - ItemsFound is &quot;True&quot;" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[ItemsFound]" IsBuilderTabModified="False" Pattern="True" RegexOption="IgnoreCase, Compiled" />
        </ActivityFunc>
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <ui:LogMessage DisplayName="Log Message - Number of messages retrieved" sap:VirtualizedContainerService.HintSize="617,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[DateTime.Now().ToString() + &quot; - &quot; + IncomingMessages.Count.ToString() + &quot; messages retrieved.&quot;]" />
    <Assign sap2010:Annotation.AnnotationText="Init 'out_IncomingMessages' Out Parameter to empty List&lt;MailMessage&gt;, which will hold final list of messages to process" DisplayName="Assign - Initialize output parameter" sap:VirtualizedContainerService.HintSize="617,132" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">[out_IncomingMessages]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(snm:MailMessage)">[New List(Of MailMessage)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each - Cycle through retrieved messages" sap:VirtualizedContainerService.HintSize="617,342" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[IncomingMessages]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="message" />
          </ActivityAction.Argument>
          <If Condition="[message.Sender.ToString().ToUpper().Contains(AuthorizedSender)]" DisplayName="If - If email Sender is authorized" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <AddToCollection x:TypeArguments="snm:MailMessage" Collection="[out_IncomingMessages]" DisplayName="Add To Collection - out_IncomingMessages" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[message]" />
            </If.Then>
          </If>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message - Number of messages filtered" sap:VirtualizedContainerService.HintSize="617,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[DateTime.Now().ToString() + &quot; - &quot; + out_IncomingMessages.Count.ToString() + &quot; messages filtered to output collection&quot;]" />
    <InvokeMethod DisplayName="Invoke Method - Reverse list" sap:VirtualizedContainerService.HintSize="617,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Reverse">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="scg:List(snm:MailMessage)">[out_IncomingMessages]</InArgument>
      </InvokeMethod.TargetObject>
    </InvokeMethod>
    <Assign DisplayName="Assign - EmailProcessCount" sap:VirtualizedContainerService.HintSize="617,60" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[EmailProcessCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[Integer.Parse(in_Config("ProcessCountOrqAsset").ToString())]</InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:Annotation.AnnotationText="If number of messages is greater than allowed by Orchestrator asset setting, remove excess messages from List object." Condition="[out_IncomingMessages.Count &gt; EmailProcessCount]" DisplayName="If - Number of messages is greater than allowed by Orchestrator asset setting" sap:VirtualizedContainerService.HintSize="617,424" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <InvokeMethod sap2010:Annotation.AnnotationText="Method RemoveRange will truncate final list to the number specified in Config param in 'EmailProcessCount', used in parameter expressions for this activity." DisplayName="Invoke Method - Remove range" sap:VirtualizedContainerService.HintSize="238,234" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="RemoveRange">
          <InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="scg:List(snm:MailMessage)">[out_IncomingMessages]</InArgument>
          </InvokeMethod.TargetObject>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <InArgument x:TypeArguments="x:Int32">[EmailProcessCount]</InArgument>
          <InArgument x:TypeArguments="x:Int32">[out_IncomingMessages.Count - EmailProcessCount]</InArgument>
        </InvokeMethod>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message - Mesgs requested did exceed # retrieved" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Count of messages requested does not exceed number retrieved.&quot;]" />
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message - Actual number of messages to process" sap:VirtualizedContainerService.HintSize="617,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[DateTime.Now().ToString() + &quot; - &quot; + out_IncomingMessages.Count.ToString() + &quot; messages taken from collection for final processing.&quot;]" />
  </Sequence>
</Activity>